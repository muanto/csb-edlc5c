{"version":3,"sources":["AppRouterBlocker.jsx","views.jsx","appRoutes.js","App.js","index.js"],"names":["AppRouterBlocker","props","history","hashHistory","useEffect","console","log","unblock","block","tx","JSON","stringify","url","location","pathname","when","window","confirm","retry","Page","title","children","ErrorPage","error","useRouteError","id","statusText","message","Navigation","to","Root","Home","List","Item","params","useParams","React","useState","isBlocked","setIsBlocked","type","checked","onClick","v","appRoutes","path","element","errorElement","CustomRouter","basename","action","state","setState","useLayoutEffect","listen","navigationType","navigator","createHashRouter","App","className","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.32750084.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useEffect } from \"react\";\nimport hashHistory from \"history/hash\";\n\nexport default function AppRouterBlocker(props) {\n  const history = hashHistory; //useContext(UNSAFE_NavigationContext).navigator;\n  useEffect(() => {\n    console.log(\"block\");\n\n    const unblock = history.block((tx) => {\n      console.log(JSON.stringify(tx));\n      const url = tx.location.pathname;\n\n      if (\n        props.when === false ||\n        window.confirm(`Abbandonare pagina per url ${url}?`)\n      ) {\n        // Unblock the navigation.\n        unblock();\n\n        // Retry the transition.\n        tx.retry();\n      }\n    });\n\n    return () => {\n      console.log(\"unblock\");\n      unblock();\n    };\n  }, [props.when, history]);\n  return null;\n}\n","import React from \"react\";\nimport { useRouteError, Link, Outlet, useParams } from \"react-router-dom\";\nimport AppRouterBlocker from \"./AppRouterBlocker\";\n\nconst Page = (props) => (\n  <div>\n    <h2>{props.title}</h2>\n    {props.children}\n  </div>\n);\n\nexport default function ErrorPage() {\n  const error = useRouteError();\n  console.error(error);\n\n  return (\n    <div id=\"error-page\">\n      <h1>Oops!</h1>\n      <p>Sorry, an unexpected error has occurred.</p>\n      <p>\n        <i>{error.statusText || error.message}</i>\n      </p>\n    </div>\n  );\n}\nexport const Navigation = () => (\n  <nav>\n    <ul>\n      <li>\n        <Link to={`/`}>Home</Link>\n      </li>\n      <li>\n        <Link to={`/list`}>List</Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport const Root = () => (\n  <Page title=\"Root\">\n    <Navigation />\n\n    <div id=\"detail\">\n      <Outlet />\n    </div>\n  </Page>\n);\nexport const Home = () => <Page title=\"Home\"></Page>;\nexport const List = () => (\n  <Page title=\"List\">\n    <nav>\n      <ul>\n        <li>\n          <Link to={`1`}>item 1</Link>\n        </li>\n        <li>\n          <Link to={`2`}>item 2</Link>\n        </li>\n      </ul>\n    </nav>\n  </Page>\n);\n\nexport const Item = () => {\n  const params = useParams();\n  const [isBlocked, setIsBlocked] = React.useState(true);\n  return (\n    <Page title={\"Item\" + params.id + \" with block confirm\"}>\n      <AppRouterBlocker when={isBlocked} />\n      <div>\n        <input\n          type=\"checkbox\"\n          checked={isBlocked}\n          onClick={() => setIsBlocked((v) => !v)}\n        />{\" \"}\n        {isBlocked ? \"blocked\" : \"unblocked\"}\n      </div>\n      <nav>\n        <ul>\n          <li>\n            <Link to={`brief`}>brief</Link>\n          </li>\n          <li>\n            <Link to={`report`}>report</Link>\n          </li>\n        </ul>\n      </nav>\n    </Page>\n  );\n};\n","import React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport ErrorPage, { Home, Item, List, Root } from \"./views\";\n\nconst appRoutes = [\n  {\n    path: \"/\",\n    element: <Root />,\n    errorElement: <ErrorPage />,\n    children: [\n      {\n        path: \"\",\n        element: <Home />,\n        errorElement: <ErrorPage />,\n        children: [\n          {\n            path: \"items/:id\",\n            element: <div>item1</div>\n          }\n        ]\n      },\n      {\n        path: \"list/\",\n        element: <Outlet />,\n        errorElement: <ErrorPage />,\n        children: [\n          {\n            path: \"\",\n            element: <List />\n          },\n          {\n            path: \":id/*\",\n            element: (\n              <>\n                <Item />\n                <Outlet />\n              </>\n            ),\n            children: [\n              {\n                path: \"brief\",\n                element: <div>brief</div>\n              },\n              {\n                path: \"report\",\n                element: <div>report</div>\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n];\n\nexport default appRoutes;\n","import \"./styles.css\";\nimport React from \"react\";\nimport {\n  createHashRouter,\n  Router,\n  Route,\n  Routes,\n  Outlet\n} from \"react-router-dom\";\nimport appRoutes from \"./appRoutes\";\nimport { Home, Root, Item, List } from \"./views\";\nimport hashHistory from \"history/hash\";\n\nconst CustomRouter = ({ basename, children, history }) => {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n};\n\nconst appRouter = createHashRouter(appRoutes);\nexport default function App() {\n  /* useEffect(() => {\n    const unblock = history.block((tx) => {\n      // Navigation was blocked! Let's show a confirmation dialog\n      // so the user can decide if they actually want to navigate\n      // away and discard changes they've made in the current page.\n      const url = tx.location.pathname;\n      if (window.confirm(`Abbandonare pagina per url ${url}?`)) {\n        // Unblock the navigation.\n        unblock();\n\n        // Retry the transition.\n        tx.retry();\n      }\n    });\n\n    return unblock;\n      <RouterProvider router={appRouter}></RouterProvider>{\" \"}\n  }, []);*/\n  return (\n    <div className=\"App\">\n      <CustomRouter history={hashHistory}>\n        <Routes>\n          <Route path=\"/\" element={<Root />}>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"list/\" element={<Outlet />}>\n              <Route path=\"\" element={<List />} />\n              <Route\n                path=\":id/*\"\n                element={\n                  <>\n                    <Item />\n                    <Outlet />\n                  </>\n                }\n              >\n                <Route path=\"brief\" element={<div>Brief</div>} />\n                <Route path=\"report\" element={<div>Report</div>} />\n              </Route>\n            </Route>\n          </Route>\n        </Routes>\n      </CustomRouter>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}